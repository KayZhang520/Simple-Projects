{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\proj2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './style.css';\nimport { useReducer } from \"react\";\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      } //avoid illegal digits\n\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") return state;\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) return state;\n      console.log(state);\n      return { ...state,\n        currentOperand: `${state.currentOperand || \"\"} ${payload.digit}`\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOp == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n\n      if (state.currentOperand == null) return state;\n\n      if (state.currentOperand.length === 1) {\n        return { ...state,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand); //return empty string if any operand is empty\n\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"รท\":\n      computation = prev / current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n  }\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\n\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split('.');\n  if (decimal == null) return INTEGER_FORMATTER.format(integer);\n  return `${INTEGER_FORMATTER.format(integer)}.%{decimal}`;\n}\n\nfunction App() {\n  _s();\n\n  //using 'useReducer' hook to manage states, {} sets initial state to be all empty\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [previousOperand, \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: currentOperand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: operation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WeWMCJ8aSceB6zGid5E6ZuXXXOw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/projects/proj2/src/App.js"],"names":["useReducer","DigitButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","console","log","previousOperand","operation","evaluate","currentOp","length","slice","prev","parseFloat","current","isNaN","computation","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","integer","decimal","split","format","App","dispatch"],"mappings":"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","sourcesContent":["import './style.css';\nimport { useReducer } from \"react\"\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE:'evaluate'\n}\n\nfunction reducer(state, { type, payload }){\n  switch(type){\n    case ACTIONS.ADD_DIGIT:\n      if(state.overwrite){\n        return{\n          ...state,\n          currentOperand:payload.digit,\n          overwrite:false\n        }\n      }\n\n      //avoid illegal digits\n      if(payload.digit ===\"0\" && state.currentOperand === \"0\")return state\n      if(payload.digit ===\".\" && state.currentOperand.includes(\".\"))return state\n      console.log(state)\n      return {\n        ...state,\n        currentOperand:`${state.currentOperand || \"\"} ${payload.digit}`\n      }\n\n    case ACTIONS.CLEAR:\n      return {}\n    case ACTIONS.CHOOSE_OPERATION:\n      if(state.currentOperand == null && state.previousOperand == null){\n        return state\n      }\n      if(state.previousOperand == null){\n        return{\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand:null\n      }\n    case ACTIONS.EVALUATE:\n      if (state.operation == null ||\n        state.currentOp == null ||\n        state.previousOperand == null\n      ){\n        return state\n      }\n      return {\n        ...state,\n        overwrite:true,\n        previousOperand:null,\n        operation:null,\n        currentOperand:evaluate(state)\n      }\n    case ACTIONS.DELETE_DIGIT:\n      if(state.overwrite){\n        return {\n          ...state,\n          overwrite:false,\n          currentOperand:null\n        }\n      }\n      if(state.currentOperand==null) return state\n      if(state.currentOperand.length===1){\n        return { ...state, currentOperand:null}\n      }\n      return {\n        ...state,\n        currentOperand:state.currentOperand.slice(0, -1)\n      }\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation}){\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n  //return empty string if any operand is empty\n  if (isNaN(prev)|| isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"รท\":\n      computation = prev/current\n      break\n    case \"*\":\n      computation = prev*current\n      break\n  }\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits:0\n})\nfunction formatOperand(operand){\n  if(operand == null)return\n  const [integer, decimal] = operand.split('.')\n  if(decimal == null) return INTEGER_FORMATTER.format(integer)\n  return `${INTEGER_FORMATTER.format(integer)}.%{decimal}`\n}\n\nfunction App() {\n  //using 'useReducer' hook to manage states, {} sets initial state to be all empty\n  const [{currentOperand, previousOperand, operation},dispatch] = useReducer(\n    reducer,\n    {}\n  )\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {previousOperand} {operation}\n        </div>\n        <div className=\"current-operand\">\n          {currentOperand}\n        </div>\n      </div>\n      <button className=\"span-two\" onClick={()=> dispatch({type: ACTIONS.CLEAR})}>AC</button>\n      <button onClick={()=> dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n      <OperationButton operation=\"รท\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"1\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"2\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"3\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"*\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"4\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"5\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"6\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"+\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"7\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"8\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"9\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"-\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\".\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"0\" dispatch={dispatch}></DigitButton>\n      <button className=\"span-two\" onClick={()=>dispatch({type:ACTIONS.EVALUATE})}>{operation}</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}